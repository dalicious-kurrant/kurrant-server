buildscript {
    ext {
        springBootVersion = '2.7.2'
        dependencyManagementVersion = '1.0.12.RELEASE'
        mysqlVersion = '8.0.30'
        lombokVersion = '6.5.0.3'
        queryDslVersion = '4.4.0'
        queryDslPluginVersion = '1.0.10'
        mapStructVersion = '1.5.3.Final'
        lombokMapstructBindingVersion = "0.2.0"
    }
    repositories {
        mavenCentral()
        maven {
        	url "https://plugins.gradle.org/m2/"
	    }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}"
        classpath "io.freefair.gradle:lombok-plugin:${lombokVersion}"
        // for QueryDSL
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${queryDslPluginVersion}"
    }
}

subprojects {
    group = 'co.kurrant.app'
    version '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'com.ewerk.gradle.plugins.querydsl'
    
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    dependencies {
    	compile group: 'com.querydsl', name: 'querydsl-jpa'
    	compile group: 'com.querydsl', name: 'querydsl-sql'
    	annotationProcessor group: 'com.querydsl', name: 'querydsl-apt'
    	implementation group: 'com.querydsl', name: 'querydsl-sql-spring'

		// for QueryDSL
	    // implementation "com.querydsl:querydsl-core:${queryDslVersion}"
	    // implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	    // annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
	    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	    
	    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
	    implementation "org.mapstruct:mapstruct:${mapStructVersion}"

//        MySQL
        runtimeOnly 'mysql:mysql-connector-java'
//        implementation 'com.h2database:h2:1.4.200'
	    
	    /*
	        this example uses lombok directly over the annotationProcessor,
	        the io.freefair.lombok plugin works as well.
	        The freefair-lombok plugin is used in the example mapstruct-on-gradle-testcp-with-lombok
	 	*/
		annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
        
        testImplementation 'junit:junit:4.12'
    }
    
    // 모든 추가빌드 코드 설정
    def generatedSrcDir = "$buildDir/generated/sources/annotationProcessor/java/main"
    def queryDslDir = "$buildDir/generated/sources/querydsl"
    sourceSets {
    	main {
    		java {
    			srcDir 'src/main/java'
				srcDir generatedSrcDir
				srcDir queryDslDir
    		}
    	}
	}
	
	// QueryDSL 설정
	querydsl {
		library = "com.querydsl:querydsl-apt"
		jpa = true
		querydslSourcesDir = queryDslDir
	}
	
	// Gradle 5.0 이후 설정 필수
	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
		querydsl.extendsFrom compileClasspath
	}
	compileQuerydsl {
		options.annotationProcessorPath = configurations.querydsl
	}
}

subprojects {
    group = 'co.dalicious'
    version '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'io.freefair.lombok'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web:2.6.1'
    }

}

// for QueryDSL
task cleanGeneatedDir(type: Delete) {
    delete file("$buildDir/generated/sources/querydsl")
}

project(':app-public-api') {
    dependencies {
        implementation project(':system-core')
        implementation project(':domain-user')
        implementation project(':domain-food')
        implementation project(':domain-client')
        implementation project(':domain-order')
        implementation project(':client-core')
        implementation project(':domain-file')
        implementation project(':client-external-mail')
        implementation project(':client-external-sms')
        implementation project(':data-redis')
    }
}

project(':app-admin-api') {
    dependencies {
        implementation project(':system-core')
        implementation project(':client-core')
        implementation project(':client-external-bizppurio')
        implementation project(':domain-file')
        implementation project(':domain-banner')
        implementation project(':domain-user')
        implementation project(':domain-food')
    }
}

project(':client-external-bizppurio') {
    dependencies {
    	implementation project(':system-core')
    }
}

project(':client-core') {
    dependencies {
        implementation project(':system-core')
    }
}
project(':domain-address') {
    dependencies {
    	implementation project(':system-core')
    }
}

project(':domain-banner') {
    dependencies {
        implementation project(':system-core')        
        implementation project(':domain-file')
    }
}

project(':domain-file') {
    dependencies {
    	implementation project(':system-core')    
    }
}

project(':domain-food') {
    dependencies {
        implementation project(':system-core')
    }
}

project(':domain-user') {
    dependencies {
    	implementation project(':system-core')
    	implementation project(':domain-file')
        implementation project(':domain-address')
        implementation project(':domain-client')
    }
}

project(':domain-client') {
    dependencies {
        implementation project(':system-core')
        implementation project(':domain-address')
    }
}

project(':domain-order') {
    dependencies {
        implementation project(':system-core')
        implementation project(':domain-user')
    }
}

project(':client-external-mail') {
    dependencies {
        implementation project(':system-core')
        implementation project(':data-redis')
    }
}

project(':client-external-sms') {
    dependencies {
        implementation project(':system-core')
        implementation project(':data-redis')
    }
}
